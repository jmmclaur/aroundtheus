!function(){"use strict";class e{constructor(e,t,s){this._data=e,this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__trash-button").addEventListener("click",(()=>{this._handleDeleteButton()})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteButton(){this._cardElement.remove(),this._cardElement=null}getView(){this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0);const e=this._cardElement.querySelector("#card-image"),t=this._cardElement.querySelector("#card-title");return e.src=this._data.link,e.alt=this._data.name,t.textContent=this._data.name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._formElement=t,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._errorList=e.errorList,this._inputEls=this._formElement.querySelectorAll(this._inputSelector),this._submitButton=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e){this._errorMessageEl=this._formElement.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessageEl.textContent=e.validationMessage,this._errorMessageEl.classList.add(this._errorClass)}_hideInputError(e){this._errorMessageEl=this._formElement.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessageEl.textContent="",this._errorMessageEl.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return this._inputElementsArray=Array.from(this._inputEls),this._inputElementsArray.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}_setEventListeners(){this._inputEls=this._formElement.querySelectorAll(this._inputSelector),this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this.disableButton()})),this._setEventListeners(),this._toggleButtonState()}resetValidation(){this._inputEls.forEach((e=>{this._hideInputError(e)})),this.disableButton()}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}}class s{constructor(e){let{popUpSelector:t}=e;this._popUpElement=document.querySelector(t),this._closeButton=this._popUpElement.querySelector(".modal__close"),this.close=this.close.bind(this)}open(){this._popUpElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscapeKey),document.addEventListener("mousedown",this._handleOutsideClick)}close(){this._popUpElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscapeKey),document.removeEventListener("mousedown",this._handleOutsideClick)}_handleEscapeKey=e=>{"Escape"===e.key&&this.close()};_handleOutsideClick=e=>{e.target.classList.contains("modal")&&this.close()};setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()}))}}class i extends s{constructor(e,t){super({popUpSelector:e}),this._popUpForm=this._popUpElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputEl=this._popUpElement.querySelectorAll(".modal__input")}open(){super.open()}setEventListeners(){super.setEventListeners(),this._popUpForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._popUpForm.reset(),this.close()}))}_getInputValues(){return this._inputValues={},this._inputEl.forEach((e=>{this._inputValues[e.name]=e.value})),this._inputValues}setInputValues(e){this._inputEl.forEach((t=>{t.value=e[t.name]}))}}const n=document.querySelector("#profile-edit-button"),r=document.querySelector("#profile-edit-modal"),o=(document.querySelector("#profile-title"),document.querySelector("#profile-description"),document.querySelector("#profile-title-input"),document.querySelector("#profile-description-input"),r.querySelector(".modal__form")),l=(document.querySelector("#card-template").content.firstElementChild,document.querySelector(".gallery__cards"),document.querySelector(".profile__add-button")),a=(document.querySelector("#add-card-form"),document.querySelector("#add-card-modal").querySelector(".modal__button"),document.querySelector(".modal__preview-image"),document.querySelector(".modal__preview-description"),"#card-template"),c=new class{constructor(e){let{profileTitle:t,profileDescription:s}=e;this._title=document.querySelector("#profile-title"),this._description=document.querySelector("#profile-description")}getUserInfo(){return this._userInfo={title:this._title.textContent,description:this._description.textContent},this._userInfo}setUserInfo(e){this._title.textContent=e.title,this._description.textContent=e.description}}({profileTitle:".modal__input_type_title",profileDescription:".modal__input_type_description"});l.addEventListener("click",(()=>{h.open()}));const u={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};function d(e,t){_.open(e,t)}document.querySelectorAll(u.formSelector).forEach((e=>{new t(u,e).enableValidation()}));const _=new class extends s{constructor(e){super({popUpSelector:e})}open(e){this._image=this._popUpElement.querySelector(".modal__preview-image"),this._caption=this._popUpElement.querySelector(".modal__preview-description"),this._image.src=e.link,this._image.alt=e.name,this._caption.textContent=e.name,super.open()}}("#modal-preview");function m(t){return new e(t,a,d).getView()}_.setEventListeners();const p=new i("#profile-edit-modal",(function(e){c.setUserInfo({title:e.title,description:e.description}),p.close()}),u),h=new i("#add-card-modal",(function(e){const t=m({name:e.name,link:e.link});S.addItem(t),h.close()}),u);p.setEventListeners(),h.setEventListeners();const E=new t(u,o);E.enableValidation(),n.addEventListener("click",(()=>{p.open();const e=c.getUserInfo();p.setInputValues(e),E.resetValidation()}));const S=new class{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{const t=this._renderer(e);this._container.append(t)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:m},".gallery__cards");S.renderItems()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,