!function(){"use strict";class e{constructor(e,t,s,r,i){this._data=e,this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteButton=r,this._id=e._id,this._isLiked=e.isLiked,this._handleLike=i}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__trash-button").addEventListener("click",(()=>{this._handleDeleteButton()})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}handleDeleteButton(){this._cardElement.remove(),this._cardElement=null}_getElement(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){this._cardElement=this._getElement();const e=this._cardElement.querySelector("#card-image"),t=this._cardElement.querySelector("#card-title");return e.src=this._data.link,e.alt=this._data.name,t.textContent=this._data.name,this._deleteButton=this._cardElement.querySelector(".card__trash-button"),this._setEventListeners(),this._cardElement}_renderLikes(){this._isLiked?this.handleLikeIcon.classList.add(".card__like-button_active"):this.handleLikeIcon.classList.remove(".card__like-button_active")}}class t{constructor(e,t){this._formElement=t,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._errorList=e.errorList,this._inputEls=this._formElement.querySelectorAll(this._inputSelector),this._submitButton=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e){this._errorMessageEl=this._formElement.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessageEl.textContent=e.validationMessage,this._errorMessageEl.classList.add(this._errorClass)}_hideInputError(e){this._errorMessageEl=this._formElement.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessageEl.textContent="",this._errorMessageEl.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return this._inputElementsArray=Array.from(this._inputEls),this._inputElementsArray.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}_setEventListeners(){this._inputEls=this._formElement.querySelectorAll(this._inputSelector),this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this.disableButton()})),this._setEventListeners(),this._toggleButtonState()}resetValidation(){this._inputEls.forEach((e=>{this._hideInputError(e)})),this.disableButton()}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}}class s{constructor(e){let{popUpSelector:t}=e;this._popUpElement=document.querySelector(t),this._closeButton=this._popUpElement.querySelector(".modal__close"),this.close=this.close.bind(this)}open(){this._popUpElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscapeKey),document.addEventListener("mousedown",this._handleOutsideClick)}close(){this._popUpElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscapeKey),document.removeEventListener("mousedown",this._handleOutsideClick)}_handleEscapeKey=e=>{"Escape"===e.key&&this.close()};_handleOutsideClick=e=>{e.target.classList.contains("modal")&&this.close()};setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()}))}}class r extends s{constructor(e,t){super({popUpSelector:e}),this._popUpForm=this._popUpElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._submitButton=this._popUpForm.querySelector(".modal__button")}_getInputValues(){const e=this._popUpForm.querySelectorAll(".modal__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setLoading(e){this._submitButton.textContent=e?"Saving...":"Save"}setEventListeners(){super.addEventListeners(),this._popUpForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}close(){this._popUpForm.reset(),super.close()}}class i{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.reverse().forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}const n={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};class o extends s{constructor(e){super({popUpSelector:e})}open(e){this._image=this._popUpElement.querySelector(".modal__preview-image"),this._caption=this._popUpElement.querySelector(".modal__preview-description"),this._image.src=e.link,this._image.alt=e.name,this._caption.textContent=e.name,super.open()}}const a=document.querySelector("#profile-edit-button"),l=document.querySelector("#profile-edit-modal"),c=(document.querySelector("#profile-title"),document.querySelector("#profile-description"),document.querySelector("#profile-title-input"),document.querySelector("#profile-description-input"),l.querySelector(".modal__form")),d=(document.querySelector("#card-template").content.firstElementChild,document.querySelector(".gallery__cards"),document.querySelector(".profile__add-button")),u=document.querySelector("#add-card-form"),h=(document.querySelector("#add-card-modal").querySelector(".modal__button"),document.querySelector(".modal__preview-image"),document.querySelector(".modal__preview-description"),document.querySelector(".profile__avatar-button")),_=document.querySelector("#avatar-modal").querySelector(".modal__form"),m=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}getUserInfoAndCards(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}renderResult(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then(this.renderResult)}addCard(e){let{name:t,url:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this.renderResult)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then(this.renderResult)}updateUserInfo(e,t){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})})}updateAvatar(e){let{link:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this.renderResult)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this.renderResult)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this.renderResult)}dislikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this.renderResult)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1/",headers:{authorization:"f0969997-b1fb-4c1c-9062-68f00b8d62d1","Content-Type":"application/json"}});let p;new i({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:S},"#gallery__cards").renderItems(),m.getInitialCards().then((e=>{p=new i({items:e,renderer:e=>{const t=S(e);p.addItem(t)}},".gallery__list "),p.renderItems()})).catch((e=>{console.error("Error fetching initial cards",e)})),m.getUserInfo().then((e=>{E.setUserInfo({title:e.title,description:e.description,avatar:e.avatar})})).catch((e=>{console.log(e)}));const E=new class{constructor(e){let{titleSelector:t,descriptionSelector:s,avatarSelector:r}=e;this._title=document.querySelector(t),this._description=document.querySelector(s),this._avatar=document.querySelector(r)}getUserInfo(){return this._userInfo={title:this._title.textContent,description:this._description.textContent},this._userInfo}setUserInfo(e){this._title.textContent=e.title,this._description.textContent=e.description,this._avatar.src=e.avatar}getUserInfo(){return this._userInfo}setAvatar(e){let{avatar:t}=e;this._avatar.src=t}}({profileTitle:".modal__input_type_title",profileDescription:".modal__input_type_description",avatarSelector:".profile__image"}),v=new r("#profile-edit-modal",(function(e){let{title:t,description:s}=e;v.setLoading(!0),m.updateUserInfo(t,s).then((()=>{E.setUserInfo({title:t,description:s})})).catch((e=>{console.error(e)})).finally((()=>{v.setLoading(!1),v.close()}))}),n),f=new r("#add-card-modal",(function(e){f.setLoading(!0),m.addCard(e).then((e=>{const t=S(e);p.addItem(t),f.close()})).catch((e=>{console.error(e)})).finally((()=>{f.setLoading(!1)}))}),n);function S(t){return new e(t,"#card-template",y,g,b).getView()}function y(e){let{name:t,link:s}=e;w.open(t,s)}function g(e){C.open(),C.setSubmitAction((()=>{C.setLoading(!0,"Deleting..."),m.deleteCard(e).then((()=>{this.handleDeleteCard(),C.close()})).catch((e=>{console.error(e)})).finally((()=>{C.setLoading(!1,"Yes")}))}))}function b(e){e._isLiked&&m.dislikeCard(e._id).then((()=>{e.handleLikeIcon(),e._isLiked=!1})).catch((e=>{console.error(e)})),e._isLiked||m.likeCard(e._id).then((()=>{e.handleLikeIcon(),e._isLiked=!0})).catch((e=>{console.error(e)}))}v.setEventListeners(),f.setEventListeners(),new o("#modal-preview").setEventListeners(),a.addEventListener("click",(()=>{v.open();const e=E.getUserInfo();v.setInputValues(e),L.resetValidation()})),document.querySelectorAll(n.formSelector).forEach((e=>{new t(n,e).enableValidation()}));const L=new t(n,c);L.enableValidation();const k=new t(n,u);k.enableValidation(),new t(n,_).enableValidation();const q=new r("#profile-avatar-modal",(function(e){q.setLoading(!0),m.updateAvatar(e).then((e=>{E.setAvatar(e),q.close()})).catch((e=>{console.error(e)})).finally((()=>{q.setLoading(!1)}))}),h);d.addEventListener("click",(()=>{k.resetValidation(),f.open()})),f.setEventListeners(),h.addEventListener("click",(()=>{q.open()})),q.setEventListeners();const w=new o("#preview-card-modal");w.addEventListeners();const C=new class extends s{constructor(e){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupForm.querySelector(".modal__button"),this._submitButtonText=this._submitButton.querySelector("#delete-card-modal")}setSubmitAction(e){this._handleFormSubmit=e}setLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()})),super.addEventListeners()}}("#delete-card-modal");C.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,